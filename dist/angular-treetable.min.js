/**
 * angular-treetable
 * @version v0.1.0 - 2014-05-17
 * @link http://github.com/garrettheel/angular-treetable
 * @author Garrett Heel (garrettheel@gmail.com)
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
"use strict";angular.module("ngTreetable",[]).controller("TreetableController",["$scope","$element","$compile","$templateCache",function(a,b,c,d){var e=b;a.compileElement=function(b,e){var f=angular.isFunction(a.template)?a.template(b):a.template,g=d.get(f),h=a.$parent.$new();return h.node=b,h._ttParent=e,c(g)(h)},a.addChildren=function(c){var d=c?c.scope().node:null,f=c?c.data("ttId"):null;c&&(c.scope().loading=!0),a.nodes(d).then(function(d){var g=[];angular.forEach(d,function(b){var c=a.compileElement(b,f);g.push(c.get(0))});var h=null!=f?e.treetable("node",f):null;b.treetable("loadBranch",h,g),c&&(c.scope().loading=!1),null==c&&angular.isFunction(a.afterInit)&&a.afterInit()})},a.onNodeExpand=function(){this.row.scope().loading||(e.treetable("unloadBranch",this),a.addChildren(this.row))},a.onNodeCollapse=function(){this.row.scope().loading||e.treetable("unloadBranch",this)},a.treetableOptions=angular.extend({expandable:!0,onNodeExpand:a.onNodeExpand,onNodeCollapse:a.onNodeCollapse},a.options),a.options&&angular.forEach(["onNodeCollapse","onNodeExpand"],function(b){a.options[b]&&(a.treetableOptions[b]=function(){a[b].apply(this,arguments),a.options[b].apply(this,arguments)})}),e.treetable(a.treetableOptions),a.addChildren(null)}]).directive("ttTable",[function(){return{restrict:"AC",scope:{template:"=",nodes:"=",options:"="},controller:"TreetableController"}}]).directive("ttNode",[function(){var a=0;return{restrict:"AC",scope:{isBranch:"=",parent:"="},link:function(b,c){var d=angular.isDefined(b.isBranch)?b.isBranch:!0,e=angular.isDefined(b.parent)?b.parent:b.$parent._ttParent;c.attr("data-tt-id",a++),c.attr("data-tt-branch",d),c.attr("data-tt-parent-id",e)}}}]);